# References
# https://docs.github.com/en/actions
# https://docs.gitea.com/usage/actions/overview
# [Built-in contexts](https://docs.github.com/en/actions/learn-github-actions/contexts)
# https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job
name: Build and deploy through Docker

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  APP_NAME: ${{ vars.APP_NAME || 'auther' }}
  APP_PORT: ${{ vars.APP_PORT || 3000 }}
  REGISTRY: ${{ vars.REGISTRY || 'git.kamaslau.com' }}

jobs:
  # Build and push image to registry
  build-and-push:
    runs-on: [ubuntu-latest]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Action digest
        run: |
          echo "ðŸŽ‰ The job was triggered by '${{ gitea.event_name }}' event on branch '${{ gitea.ref }}' of repository '${{ gitea.repository }}', running on '${{ runner.os }}/${{ runner.arch }}' runner."
          echo "Operating image '${{ env.REGISTRY }}/${{ gitea.repository }}'"

      - name: Check out repository code
        uses: actions/checkout@v4

      # https://github.com/actions/runner/issues/655
      - name: Load env variables and write into .env file
        shell: bash
        run: |
          # git update-index --chmod=+x "${{ gitea.workspace }}/.env.production"
          echo "${{ secrets.ENV_FILE }}" > "${{ gitea.workspace }}/.env.production"
          ls -al ${{ gitea.workspace }}

      # https://gitea.com/gitea/act_runner/issues/301
      - name: "[Gitea] Install docker for ubuntu-latest runner"
        uses: papodaca/install-docker-action@main

      # https://gitea.com/gitea/act_runner/issues/303
      # https://github.com/marketplace/actions/docker-login
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER || gitea.actor }}
          password: ${{ secrets.REGISTRY_TOKEN || secrets.GITEA_TOKEN }}

      # https://github.com/marketplace/actions/docker-metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ gitea.repository }}
          # set latest tag for default branch
          tags: type=raw,value=latest,enable={{is_default_branch}}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        # https://docs.gitea.com/usage/actions/comparison#dockerbuild-push-actionv4
        env:
          ACTIONS_RUNTIME_TOKEN: ""
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Prune docker build cache
        shell: bash
        run: |
          docker builder prune -f

  # Pull and deploy image
  pull-and-run:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/ssh-remote-commands
      - name: Pull image from registry
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_KEY}}
          script_stop: true # allow script to exit upon error
          script: |
            docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USER || gitea.actor }} -p ${{ secrets.REGISTRY_TOKEN || secrets.GITEA_TOKEN }}

            docker pull ${{ env.REGISTRY }}/${{ gitea.repository }}

            if [ $(docker ps -aq --filter name=${{ env.APP_NAME }}) ]; then
              docker stop ${{ env.APP_NAME }}
              docker rm ${{ env.APP_NAME }};
            fi

            docker run --name ${{ env.APP_NAME }} -p ${{ env.APP_PORT }}:3000 -d --restart always --network trial-mysql_backend --link mysql ${{ env.REGISTRY }}/${{ gitea.repository }}

            docker rmi $(docker images --filter dangling=true -q)
